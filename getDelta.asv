function [dJdW,dJdB] = getDelta(P,Q,L,Lt,Ls,W,b,hs,ht,opts)
k1 = opts.k1;
k2 = opts.k2;
alpha = opts.alpha;
beta = opts.beta;
gamma = opts.gamma;

[~,N] = size(hs);
[~,Ns] = size(Ls);
[~,Nt] = size(Lt);

tmpPW = zeros(size(W));
tmpQW = tmpPW;
tmpPB = zeros(size(b));
tmpQB = zeros(size(b));
for i = 1:N
    d = size(L{i},1);
    tmphs = repmat(hs(:,i),1,size(P(i,:),2));
    tmpL = zeros(d,size(P(i,:),2));
    for j = 1:size(P(i,:),2)
        tmpL(:,j) = L{P(i,j)}(:,i);
        tmpPW = tmpPW + L{P(i,j)}(:,i) * hs(:,i) + tmpL 
    end
    
    tmpPW = tmpPW + L{i}(:,P(i,:))*tmphs' + tmpL * hs(:,P(i,:))';
    tmpPB = tmpPB + sum(L{i}(:,P(i,:)) + tmpL,2);
        
    
    tmpQ = zeros(d,size(Q(i,:),2));
    for j = 1:size(Q(i,:),2)
        tmpQ(:,j) = L{Q(i,j)}(:,i);
    end
    tmphs = repmat(hs(:,i),1,size(Q(i,:),2));
    tmpQW = tmpQW + L{i}(:,Q(i,:))*tmphs' + tmpQ * hs(:,Q(i,:))';
    tmpQB = tmpQB + sum(L{i}(:,Q(i,:)) + tmpQ,2);
        
    
end
tmpLtW = zeros(size(W));
tmpLsW = zeros(size(W));
for i = 1:Ns   
    tmpLsW = tmpLsW + Ls(:,i)*hs(:,i)';
end
for i = 1:Nt
    tmpLtW = tmpLtW + Lt(:,i)*ht(:,i)';
end
dJdW = 2/(N*k1) * tmpPW - 2*alpha/(N*k2)*tmpQW + 2*beta/Nt*tmpLtW + 2*beta/Ns*tmpLsW + 2*gamma * W;
sumLt = sum(Lt,2);
sumLs = sum(Ls,2);
dJdB = 2/(N*k1)*tmpPB - 2*alpha/(N*k2)*tmpQB + 2*beta/Nt*sumLt + 2*beta/Ns*sumLs + 2*gamma * b;

